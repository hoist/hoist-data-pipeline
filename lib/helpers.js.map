{"version":3,"sources":["helpers.js"],"names":[],"mappings":"AAAA;;;;;QAUgB;QA2BA;QAUA;;AA9ChB;;;;AACA;;;;;;;;;;;;AAQO,SAAS,iBAAT,CAA2B,IAA3B,EAAiC,OAAjC,EAA0C;AAC/C,MAAI,WAAW,QAAX,CAD2C;AAE/C,MAAI,QAAQ,MAAR,EAAgB;AAClB,eAAW,QAAQ,MAAR,CAAe,GAAf,CADO;GAApB;AAGA,SAAO,QAAQ,WAAR,GAAsB,GAAtB,GAA4B,QAA5B,GAAuC,GAAvC,GAA6C,yBAAU,IAAV,EAAgB,WAAhB,EAA7C,CALwC;CAA1C;;AASP,SAAS,QAAT,CAAkB,IAAlB,EAAwB;AACtB,MAAI,CAAC,KAAK,GAAL,EAAU;AACb,SAAK,GAAL,GAAW,wBAAX,CADa;GAAf;AAGA,SAAO,IAAP,CAJsB;CAAxB;;AAOA,SAAS,UAAT,CAAoB,IAApB,EAA0B,IAA1B,EAAgC;AAC9B,OAAK,KAAL,GAAa,KAAK,WAAL,EAAb,CAD8B;AAE9B,SAAO,IAAP,CAF8B;CAAhC;;;;;;;;AAWO,SAAS,yBAAT,CAAmC,IAAnC,EAAyC,QAAzC,EAAmD;AACxD,SAAO,SAAS,WAAW,IAAX,EAAiB,QAAjB,CAAT,CAAP,CADwD;CAAnD;;;;;;;;AAUA,SAAS,qBAAT,CAA+B,QAA/B,EAAyC;AAC9C,WAAS,YAAT,GAAwB,IAAI,IAAJ,EAAxB,CAD8C;AAE9C,WAAS,YAAT,GAAwB,IAAI,IAAJ,EAAxB,CAF8C;AAG9C,SAAO,QAAP,CAH8C;CAAzC","file":"helpers.js","sourcesContent":["'use strict';\nimport pluralize from 'pluralize';\nimport shortid from 'shortid';\n\n/**\n * given a type and context resolve the collection name\n * @param {string} type - this instance type\n * @param {object} context - the current context\n * @returns {string} the collection name to use\n */\nexport function getCollectionName(type, context) {\n  var bucketId = 'global';\n  if (context.bucket) {\n    bucketId = context.bucket._id;\n  }\n  return context.environment + \":\" + bucketId + \":\" + pluralize(type).toLowerCase();\n}\n\n\nfunction ensureId(json) {\n  if (!json._id) {\n    json._id = shortid();\n  }\n  return json;\n}\n\nfunction ensureType(type, json) {\n  json._type = type.toLowerCase();\n  return json;\n}\n\n/**\n * adds any required fields to the instance\n * @param {string} type - the type of the instance\n * @param {object} instance - the instance to transform\n * @returns {object} the transformed instance\n */\nexport function requiredFieldsTransformer(type, instance) {\n  return ensureId(ensureType(type, instance));\n}\n\n/**\n * adds timestamps to an instance\n * @param {object} instance - the instance to transform\n * @returns {object} the transformed instance\n */\n\nexport function timestampsTransformer(instance) {\n  instance._createdDate = new Date();\n  instance._updatedDate = new Date();\n  return instance;\n}\n"],"sourceRoot":"/source/"}